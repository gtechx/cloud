//first, login with account,appname and zonename
//server will return all appdataid in the zone of app
//client need to use one of the appdataid to enter chat.

//before receive chat server chat msg, client need send ready msg to server.
//账号登录的时候发送账号、密码,返回登录成功的token
//登录聊天有两种情况
//1.聊天APP应用，没有分区
//2.游戏带分区聊天应用
//登录聊天的时候需要发送账号、密码，返回appdataidlist
//进入聊天发送appdataid, 服务器根据appdataid创建session
//客户端发送可以接受消息命令，服务器设置玩家在线

在线用户存储以及服务器死亡处理：
a.在线用户存储在onlineuser:serveraddr对应的set中，并需要对应服务器维持该key的存活，同时该key的存活也代表了对应服务器的存活
b.每个服务器需要定时检查其它服务器的存活情况，首先获取服务器列表，然后检查a中的key是否存在。如果不存在，则从服务器列表中移除服务器地址。

聊天服务器之间消息定义：

单对单消息发送：

房间消息发送：
client->server->redis->otherserver->otherclient
由两部分组成
a.发送给本地房间内的用户
b.发送给其他服务器上的房间内用户

公共消息发送：
client->server->redis->otherserver->otherclient

关于快速向全服所有user发送消息：
1.首先每个服务器都要保存当前所登录的app和分区内所有的用户id和服务器信息，那么怎样得到这些信息呢？
首先我们知道，每个服务器会有
a.当一个用户登录时，需要向redis的key queue:server列表中注册上线信息，每个服务器会检测自己的该key，并添加到自己的在线用户列表中。
b.同理，当一个用户离线时，会有一个queue:server key注册离线信息。
c.redis会维护一个所有在线用户的id集合。新启动的服务器可以读取这里面的所有id并存储起来。

2.发送广播消息：
由和游戏服务器交互的服务器接收，然后添加zone id并存储到redis的 message:server列表，各服务器自己检测并广播给服务器相关的用户。
注意：需要zone id.

3.服务器启动流程
a.读取配置文件
b.初始化数据库
c.启动服务器

4.游戏用户登录流程
a.登录游戏服务器，游戏服务器从internal服务器获取token，返回给客户端
b.客户端使用token登录chat服务器
b.验证成功以后，读取用户房间列表及房间用户信息，并添加到服务器房间列表中。
注意：多线程问题？加入所有操作都在服务器帧循环中做，就不存在多线程问题了。

5.服务器帧流程
a.掉线用户sess移除
b.新用户sess创建
c.服务器消息队列处理，最多处理每帧10个。如：新上线用户添加（包括其他服务器的）、房间用户添加/删除
d.用户请求处理，可以并行

6.登录服务器作用
a.聊天本地账号登录，登录信息包括：账号、密码、appname、platform，返回应用数据信息或者空信息用于通知客户端创建应用数据
b.聊天第三方账号登录并创建应用数据, 登录信息包括：appid、vendor、platform、nickname(同一个appid内不可重复)、第三方平台验证数据
c.聊天第三方服务器账号登录（此处登录主要是为了给其分配internal服务器，负载均衡）
d.分配真正聊天登录服务器和token
e.账号登录、验证（账号服务器功能）,返回token
f.创建应用数据, 应用信息包括：nickname(同一个appname、zonename内不可重复)
注意：appname、zone可以用zoneid代替，只要保证zoneid唯一

7.internal服务器作用
a.聊天第三方服务器账号登录tcp连接并检测ip
b.发送广播消息：公告、频道消息（世界、当前。。。）
//c.获取appname和zone列表
d.创建应用数据, 应用信息包括：appname、zonename、nickname(同一个appname、zonename内不可重复)，返回uid
e.在线用户管理：禁言/取消禁言用户、创建/删除房间、添加/移除房间用户、添加/移除房间管理员、房主转移、修改房间设置、发送消息给用户、修改用户设置/密码
f.获取聊天服务器登录token,用于游戏客户端登录聊天服务器,发送信息包括：uid、appname、zonename、platform，返回token

8.聊天服务器作用
a.token登录
b.获取好友列表、房间列表、用户信息
c.传输聊天消息：用户、房间、频道
e.修改用户信息

8.账号管理网站作用
a.登录并获取账号信息
b.管理账号appname和zone
c.管理appname在线用户
d.注册账号
e.管理appname用户数据
f.管理第三方服务器地址
